整数运算

范例：对某个数加 1
$ i=0;
$ ((i++))
$ echo $i
1

$ let i++
$ echo $i
2

$ expr $i + 1    #注意空格
3
$ echo $i
2

$ echo $i 1 | awk '{printf $1+$2}'
3

从1加到某个数
#!/bin/bash
#calc.sh

i=0;
n=0;
while [ $i -lt 100 ]
do
        ((i++))
        n=` expr $n + $i `
done
echo $n

替换i++部分
let i++;

i=$(expr $i + 1)

i=$(echo $i+1|bc)

i=$(echo "$i 1" | awk '{printf $1+$2;}')

求余数
$ expr 5 % 2
1
$ let i=5%2
$ echo $i
1
$ echo 5 % 2 | bc
1
$ ((i=5%2))
$ echo $i
1

求幂
$ expr 5 % 2
1

$ let i=5%2
$ echo $i
1

$ echo 5 % 2 | bc
1

$ ((i=5%2))
$ echo $i
1


浮点运算

let 和 expr 都无法进行浮点运算，但是 bc 和 awk 可以。


whwu@master:~/script> echo "100 13" | awk '{printf("%.3f\n",$1/$2)}'  #awk 在控制小数位数的时候非常灵活，仅仅通过 printf 的格式控制就可以实现
7.692
whwu@master:~/script> echo "scale=3; 1/13" | bc  #bc 在进行浮点运算的时候需要指定小数点位数，否则默认为 0 
.076

