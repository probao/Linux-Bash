计算1+2+...+100
#!/bin/bash
#sum1.sh

total=0;   
num=0;
while((num<=100));
do
        total=` expr $total + $num `   #expr在循环中用于增量计算,注意空格
        num=` expr $num + 1 `
done

echo "$total"


范例：有一组数据，存有某村所有家庭的人数和月总收入，找出人均月收入最高家庭
#!/bin/bash
# gettopfamily.sh

[ $# -lt 1 ] && echo "please input the income file" && exit -1
[ ! -f $1 ] && echo "$1 is not a file" && exit -1

income=$1
awk '{
        printf("%d %0.2f\n", $1, $3/$2);
}' $income | sort -k 2 -n -r


aaa 12 1 
aaa 12 2 
aaa 12 4 
aaa 15 1
aaa 15 2
bbb 12 1
bbb 12 2
最后我想得出的输出结果为
aaa  12  7
aaa  15  3
bbb  12  3

#!/usr/bin/awk -f	#表示以下语句的解释器为awk，-f 表示，awk脚本运行时需要跟一个文件名参数（awk一般就是用于文本处理的）。
NR == 1 { col1 = $1; col2 = $2; col3 = $3; }	#NR==1 行数为1 之后赋值 注意空格	
NR > 1 {        
	if($1 == col1 && $2 == col2)                
	col3+=$3;				# col3+$3=$3
else        
	{                   
	print(col1" "col2" "col3);               
	col1 = $1; col2 = $2; col3 = $3;        
	}   
}
END { print(col1" "col2" "col3); }


NR小例子
whwu@master:~/script> echo -e "A B C\nD E F\nG H I" | awk 'NR==1 {print $1}' # Number 0f Row（NR）
A





