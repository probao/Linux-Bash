grep命令
grep命令是UNIX中用于文本搜索的大师级工具。


从stdin中读取：
whwu@master:~> echo -e "this is a word\nhaha"
this is a word
haha
whwu@master:~> echo -e "this is a word\nhaha" | grep word
this is a word


whwu@master:~/script> echo this is a line. | egrep -o "[a-z]+\."  #egrep 可以用于正则表达式，-o 表示只打印匹配到的内容[a-z]+表示任意长度的字母，\为转译符，表示以.结尾的字母串
line.

whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> egrep -o "book" 1.txt   # -o 表示只打印匹配到的内容
book
book
book
book

whwu@master:~/script> cat 1.txt
book google
baidu book
i lovae shell book apple
whwu@master:~/script> grep -v "google" 1.txt  # -v invert 打印不匹配的行
baidu book
i lovae shell book apple


whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> egrep -c "book" 1.txt  # -c 统计匹配的行数
3

whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> egrep -o "book" 1.txt | wc -l   #统计所匹配内容的个数
4

whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> egrep -n "google" 1.txt  # -n 打印出包含匹配字符串的行数
1:book google


whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> grep -b -o "book" 1.txt  # 打印样式匹配所位于的字符或字节偏移
0:book
18:book
23:book
42:book

whwu@master:~/script> grep "google" . -R -n   #递归搜索 搜索整个当前文件夹
./1.txt:1:book google
./new:1:google 110 5000
./3.txt:1:booka google
./facebook.txt:1:       google 110 5000

whwu@master:~/script> cat 1.txt
book google
baidu book book
i lovae shell book apple
whwu@master:~/script> grep -e "google" -e "shell" 1.txt       # -e grep匹配多个样式
book google
i lovae shell book apple


###################meta字符. *###################
whwu@master:~/script> cat 3.txt
1234
acco
acddac
acac
4567
6543
12
abbbc
abc
c
whwu@master:~/script> grep 'a.c' 3.txt   #匹配a 任意一个字符 c
acco
abc
whwu@master:~/script> grep 'a*c' 3.txt    #匹配a 任意个或零个a  c
acco
acddac
acac
abbbc
abc
c
whwu@master:~/script> grep 'a.*c' 3.txt   #匹配a 任意个或零个字母  c
acco
acddac
acac
abbbc
abc
###################################################


######################区间表示符################
whwu@master:~/script> cat 3.txt
booka google
cooc
aba
acddca
cookab
coookaab
baidu bookxix
boooook
bok
whwu@master:~/script> grep 'o\{3,4\}' 3.txt    #\{n,m}\ 区间表达式，匹配再它前面的单个字符重现的次数区间n次-m次，也可以是[a-z]\{3,4\}表示3-4个字母，见下例。
coookaab
boooook
##################################################



################\(  \)保留空间以及后向引用的运用###########
whwu@master:~/script> cat 3.txt
accoacco
acco
acddac
acac
acdac
accocoac
coookaab
baidu bookxix
boooook
bok
whwu@master:~/script> grep '\(ac\).*\1' 3.txt   #将\(与\)间的模式储存在特殊的保留空间，最多可以是9个
accoacco
acddac
acac
acdac
accocoac
whwu@master:~/script> grep '\(ac\)\(co\)\2\1' 3.txt  #两个保留空间
accocoac
#####################################################


##################+号的运用##############
whwu@master:~/script> cat 3.txt
1234
acco
acddac
acac
4567
6543
12
whwu@master:~/script> grep '[a-z]\+' 3.txt  #注意转译符\ 匹配任意个字母
acco
acddac
acac
whwu@master:~/script> grep '[1-9]\+' 3.txt  #匹配任意个数字
1234
4567
6543
12
#############################################


##################字符集的运用##############
whwu@master:~/script> cat 3.txt
1234
acco
acddac
acac
4567
6543
12
whwu@master:~/script> grep '[[:digit:]]' 3.txt   #匹配数字
1234
4567
6543
12
whwu@master:~/script> grep '[[:alpha:]]' 3.txt  #匹配字母
acco
acddac
acac
###########################################


###############ERE（扩展正则表达式）以及交替##############
whwu@master:~/script> cat 3.txt
The computer is nice
the CPU is good
The CPU is cool
my computer is bad
the cpu is good
whwu@master:~/script> grep '[Tt]he (CPU|computer) is' 3.txt   #必须用ERE
whwu@master:~/script> egrep '[Tt]he (CPU|computer) is' 3.txt  #括号中|表示或
The computer is nice
the CPU is good
The CPU is cool
whwu@master:~/script> cat 4.txt
ab1234cd
abcd
absdfacd
ab
cd
whwu@master:~/script> grep '^ab' 4.txt  #正则表达式 匹配ab开头的行
ab1234cd
abcd
absdfacd
ab
whwu@master:~/script> egrep '^ab' 4.txt #扩展正则表达式也可以
ab1234cd
abcd
absdfacd
ab
whwu@master:~/script> egrep '^ab|cd$' 4.txt  #扩展正则表达式匹配ab开头或cd结尾的行
ab1234cd
abcd
absdfacd
ab
cd
whwu@master:~/script> grep '^ab|cd$' 4.txt  #正则表达式不可以

whwu@master:~/script> egrep '^(ab|cd)$' 4.txt  #匹配一行为ab或cd
ab
cd
#################################################################







######有问题#######
whwu@master:~/script> grep "google" . -r --include *.txt      # -r的意思是递归的对目录下的所有文件(包括子目录)进行搜索  --include *.txt表示txt文件  .{cc,ccp}表示.c和.ccp文件
./1.txt:book google
###################

打印出匹配文本之前或之后的行
whwu@master:~/script> seq 10
1
2
3
4
5
6
7
8
9
10
whwu@master:~/script> seq 10 | grep 5 -A 3  #打印5之后的三行
5
6
7
8
whwu@master:~/script> seq 10 | grep 5 -A 3 | sed 1d #删除第一行
6
7
8
whwu@master:~/script> seq 10 | grep 5 -A 3 | sed '$d'  #删除最后一行
5
6
7
whwu@master:~/script> seq 10 | grep 5 -B 3   #打印5之前的三行
2
3
4
5
whwu@master:~/script> seq 10 | grep 5 -A 1 -B 2  #打印5之后一行以及之前两行
3
4
5
6
whwu@master:~/script> seq 10 | grep 5 -C 2    #打印5之前之后两行
3
4
5
6
7


whwu@master:~/script> cat 9.txt
.a
.ab
.abc
.abcd
.abcdef
.wer
whwu@master:~/script> egrep -o "\.[a-z]{3,4}" 9.txt   #\转译符 [a-z]{3,4} 三个到四个字母
.abc
.abcd
.abcd
.wer

##############解析文本中的电子邮件地址和URL################
whwu@master:~/script> cat url_email.txt
this is a line of text contains,<email> #slynux@slynux.com. </email>
and email address, blog "http://www.google.com", test@yahoo.com
dfdfdfddf;cool.hacks@gmail.com<br />
<ahref="http://code.google.com"><h1>Heading</h1>

whwu@master:~/script> egrep -o '[A-Za-z0-9.]+@[A-Za-z0-9]+\.[a-zA-Z]{2,4}' url_email.txt   #匹配电子邮件[..]+表示多个方括号中的内容
slynux@slynux.com
test@yahoo.com
cool.hacks@gmail.com

whwu@master:~/script> egrep -o "http://[a-zA-Z0-9.]+\.[a-zA-Z]{2,3}" url_email.txt  #匹配一个HTTP URL
http://www.google.com
http://code.google.com






